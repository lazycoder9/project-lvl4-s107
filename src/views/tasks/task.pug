extends /layouts/application.pug

block content
  .container
    table.table.table-stripped
      tbody
        tr
          th ID
            td= task.id
        tr
          th Name
            td= task.name
        tr
          th Description
            td= task.description
        tr
          th Creator
            td= task.creator
        tr
          th Status
            td= task.status
            td
              form.form-inline(action='/task', method='post')
                - const value = f.object[property] === undefined ? '' : f.object[property]
                .form-group(class=(f.errors[property] && 'has-danger'))
                  label Change status
                  select(name='statusId' class='form-control' value=`${value}`)
                    each status in statuses
                      option(value= status.id)= status.name
                  input(type='hidden' name='_method' value='PATCH')
                  input(type='hidden' name='taskId' value= task.id)
                  button(class='btn btn-secondary') Set status


        tr
          th Assigned To
            td= task.assignedTo
        tr
          th Tags
            td
              if tags
                ul.list-inline
                  each tag in tags
                    li
                      a(href=`/tag/${tag.id}`)= tag.name

  form(action=`/task/${task.id}` method='post')
    .form-group
      input(type='hidden' name='_method' value='DELETE')
      button(class='btn btn-danger') Delete task

  +formFor(f, { url: '/comments/' + task.id, method: 'post' })
    +input(f, 'content', 'Comment')
    .form-group
      button(class='btn btn-primary') Add comment

  table.table.table-stripped
    thead
      tr
        th content
        th Author
        th Date
    tbody
      if comments
        each comment in comments
          tr
            td= comment.content
            td= comment.UserId
            td= comment.createdAt
