- const getInputName = (f, property) => `${f.name}[${property}]`

mixin formFor(f, options = {})
  form(action=_.get(options, 'url') method=_.get(options, 'method', 'get'))
    block

mixin input(f, property, labelText, options = { as: 'text' })
  - const value = f.object[property] === undefined ? '' : f.object[property]
  .form-group(class=(f.errors[property] && 'has-danger'))
    label= labelText
    input(name=getInputName(f, property) class='form-control' type=options['as'] value=`${value}`)
    if f.errors[property]
      .form-control-feedback= f.errors[property].map(({ message }) => message).join('. ')

mixin select(f, property, users, labelName, options = { as: 'text' })
  - const value = f.object[property] === undefined ? '' : f.object[property]
  .form-group(class=(f.errors[property] && 'has-danger'))
    label= labelName
    select(name=getInputName(f, property) class='form-control' type=options['as'] value=`${value}`)
      if users
        each user in users
          option(value= user.id)= `${user.firstName} ${user.lastName}`
    if f.errors[property]
      .form-control-feedback= f.errors[property].map(({ message }) => message).join('. ')

mixin button(f, type = 'submit', value)
  .form-group
    input(class='btn' type=`${type}` value=`${value}`)

mixin taskCard(task)
  .col-lg-4.col-sm-6.col-12.mb-5
    a(href='/tasks/' + task.id)
      .task
        .ribbon-wrapper
          .ribbon(class=task.status)= task.status
        h1.task-name= task.name
        .task-creator(class=`${task.status}-creator`)
          h6= `Created by: ${task.creator}`
        .task-assignedTo(class=`${task.status}-assignedTo`)
          h6= `Assigned To: ${task.assignedTo}`

mixin userCard(user)
  .col-lg-3.col-md-4.col-sm-6.col-12.mb-3
    a(href=`/users/${user.id}`)
      .user
        .user-name= user.fullName
        .user-email= user.email
